{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components.ts","./src/app/test2/test2.component.ts","./src/app/test2/test2.component.html","./src/app/utils.ts","./src/app/welcome/welcome.component.ts","./src/app/welcome/welcome.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAQuB;AACsC;;;;;;ICFnD,yEACE;IADuF,gVAA0B;IACjH,uDACF;IAAA,4DAAK;;;;IAFa,sIAAwC;IACxD,0DACF;IADE,qFACF;;ADQH,MAAM,YAAY;IAIvB,YAAoB,WAAqC;QAArC,gBAAW,GAAX,WAAW,CAA0B;QAHzD,eAAU,GAAG,EAAE,CAAC;IAG6C,CAAC;IAE9D,QAAQ;QACN,IAAI,CAAC,UAAU,GAAG,mDAAU,CAAC,OAAO,EAAE,CAAC;IACzC,CAAC;IACD,eAAe;QACb,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;IACzC,CAAC;IACD,MAAM,CAAC,GAAW;QAChB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7B,CAAC;IACD,IAAI,CAAC,CAAc,EAAE,MAAkB;QACrC,MAAM,MAAM,GAAI,MAAM,CAAC,MAAsB,CAAC;QAC9C,MAAM,IAAI,GAAG,MAAM,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;QAC7C,MAAM,KAAK,GAAG,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QAC3G,MAAM,YAAY,GAAG,CAAC,CAAC,WAAW,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;QACjD,MAAM,eAAe,GAAG,CAAC,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC,UAAU,GAAG,YAAY,CAAC,CAAC;QACtE,CAAC,CAAC,QAAQ,CAAC;YACT,QAAQ,EAAE,QAAQ;YAClB,IAAI,EAAE,CAAC,CAAC,eAAe,GAAG,YAAY,GAAG,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,eAAe,CAAC;SAC7E,CAAC,CAAC;IACL,CAAC;IACD,IAAI,CAAC,CAAc,EAAE,MAAkB;QACrC,MAAM,MAAM,GAAI,MAAM,CAAC,MAAsB,CAAC;QAC9C,MAAM,IAAI,GAAG,MAAM,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;QAC7C,MAAM,KAAK,GAAG,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QAC3G,MAAM,YAAY,GAAG,CAAC,CAAC,WAAW,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;QAEjD,MAAM,eAAe,GAAG,CAAC,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC,UAAU,GAAG,YAAY,CAAC,CAAC;QACtE,CAAC,CAAC,QAAQ,CAAC;YACT,QAAQ,EAAE,QAAQ;YAClB,IAAI,EAAE,eAAe,GAAG,YAAY,GAAG,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,eAAe;SAC1E,CAAC,CAAC;IACL,CAAC;IACD,aAAa,CAAC,CAAoB;QAChC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;QACrB,MAAM,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,uBAAuB,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;QAClE,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;QACtC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;IAClB,CAAC;;wEA3CU,YAAY;4FAAZ,YAAY;6EAEO,8DAAgB;;;;;;QCnBhD,yEACE;QAAA,0EAAsB;QAAA,4EAAiB;QAAA,4DAAO;QAC9C,yEACE;QAAA,4EACE;QAAA,yEAAkD;QAA5B,mRAAS,qBAAiB,IAAC;QAAC,iEAAS;QAAA,4DAAM;QACjE,yEACE;QAAA,qEACE;QAAA,wGACE;QAEJ,4DAAK;QACP,4DAAM;QAEN,0EAAkD;QAA5B,oRAAS,qBAAiB,IAAC;QAAC,kEAAS;QAAA,4DAAM;QACnE,4DAAM;QAER,4DAAM;QAER,4DAAM;QAEN,0EACO;;QAd8D,2DAA6B;QAA7B,mFAA6B;;6FDUrF,YAAY;cANxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,sBAAsB,CAAC;gBACnC,aAAa,EAAE,+DAAiB,CAAC,IAAI;aACtC;;kBAGE,uDAAS;mBAAC,SAAS,EAAE,EAAE,IAAI,EAAE,8DAAgB,EAAE;;;;;;;;;;;;;;AEnBlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AACW;AACF;AACoD;AACpD;AAClB;AACS;AACU;AACM;;AAgBxD,MAAM,SAAS;IACpB,YAAoB,QAAkB;QAAlB,aAAQ,GAAR,QAAQ,CAAU;QACpC,mDAAU,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;YAC/B,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC;QAC3C,CAAC,CAAC,CAAC;IACL,CAAC;IAED,kBAAkB,CAAI,IAAY,EAAE,CAAU;QAC5C,MAAM,EAAE,GAAG,6EAAmB,CAAC,CAAC,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAQ,CAAC;QACtE,cAAc,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;IAClC,CAAC;IACD,YAAY;IACZ,aAAa,CAAC,MAAsB;QAClC,IAAI,+DAAS,EAAE,EAAE;YACf,MAAM,CAAC,SAAS,CAAC,2DAAY,CAAC,CAAC;SAChC;IACH,CAAC;;wFAhBU,SAAS;4IAAT,SAAS,iIAHT,EAAE,YALJ;YACP,4DAAY;YACZ,uEAAa;YACb,qEAAgB;SACjB;mIAIU,SAAS,mBAZlB,2DAAY;QACZ,qEAAc;QACd,2EAAgB,aAGhB,4DAAY;QACZ,uEAAa;QACb,qEAAgB;6FAKP,SAAS;cAdrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,qEAAc;oBACd,2EAAgB;iBACjB;gBACD,OAAO,EAAE;oBACP,4DAAY;oBACZ,uEAAa;oBACb,qEAAgB;iBACjB;gBACD,SAAS,EAAE,EAAE;gBACb,eAAe,EAAE,CAAC,qEAAc,CAAC;aAClC;;;;;;;;;;;;;;ACtBD;AAAA;AAAA;AAAA;AAAyD;AACf;AACqB;AAE/D,MAAM,UAAU,GAAsB;IACpC,CAAC,cAAc,EAAE,2EAAgB,CAAC;IAClC,qEAAc;CACf,CAAC;AAEF,MAAM,CAAC,cAAc,CAAC,UAAU,EAAE,SAAS,EAAE;IAC3C,UAAU,EAAE,IAAI;IAChB,KAAK;QACH,MAAM,MAAM,GAAG,EAAE,CAAC;QAClB,KAAK,MAAM,CAAC,IAAI,IAAI,EAAE;YACpB,IAAI,KAAK,CAAC;YACV,IAAI,IAAI,CAAC;YACT,IAAI,CAAC,YAAY,KAAK,EAAE;gBACtB,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;gBACZ,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;aACd;iBAAM;gBACL,IAAI,GAAG,8DAAe,CAAC,CAAC,CAAC,CAAC;gBAC1B,KAAK,GAAG,CAAC,CAAC;aACX;YACD,MAAM,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC;SAC9B;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;CACF,CAAC,CAAC;AAMY,yEAAU,EAAC;;;;;;;;;;;;;AClC1B;AAAA;AAAA;AAAqE;;AAQ9D,MAAM,cAAc;IAEzB;IAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;4EALU,cAAc;8FAAd,cAAc;QCR3B,wEAA+C;QAAA,sFAA2B;QAAA,4DAAK;QAC/E,gEACA;QAAA,yEACE;QAAA,0EACE;QAAA,oEAGA;QAAA,wEAAuC;QAAA,yEAAc;QAAA,4DAAK;QAC1D,2EAAwC;QAAA,wEAAa;QAAA,4DAAQ;QAC7D,uEACA;QAAA,4EAA2C;QAAA,oEAAQ;QAAA,4DAAQ;QAC3D,uEACA;QAAA,0EACE;QAAA,yEACE;QAAA,wEAA4C;QAAA,yEAC9C;QAAA,4DAAQ;QACV,4DAAM;QACN,8EAA+D;QAAA,mEAAO;QAAA,4DAAS;QAC/E,yEAAgC;QAAA,4EAAW;QAAA,4DAAI;QACjD,4DAAO;QAGT,4DAAM;;6FDdO,cAAc;cAN1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,wBAAwB,CAAC;gBACrC,aAAa,EAAE,+DAAiB,CAAC,IAAI;aACtC;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAA2D;AAEpD,SAAS,eAAe,CAAC,CAAY;IAC1C,IAAI;QACF,IAAI,+DAAS,EAAE,EAAE;YACf,MAAM,aAAa,GAAI,CAAS,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,WAAW,EAAE,KAAK,WAAW,CAAC,CAAC;YACrH,OAAO,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,CAAC,iCAAM,CAAC,GAAK,GAAG,EAAG,EAAE,EAAE,CAAC,CAAC,QAAQ,CAAC;SAC/E;aAAM;YACL,OAAQ,CAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SACxC;KACF;IAAC,OAAO,CAAC,EAAE;QACV,MAAM,IAAI,KAAK,CAAC,wCAAwC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC;KACrE;AACH,CAAC;;;;;;;;;;;;;;;;;;;;ACb0G;AACnE;;AAOjC,MAAM,gBAAgB;IAI3B;QAFA,wCAAwC;QACxC,OAAE,GAAG,IAAI,wCAAQ,EAAE,CAAC;IACJ,CAAC;IAEjB,QAAQ;QACN,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IACD,eAAe;IACf,CAAC;IAEK,SAAS;;YACb,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,KAAK,CAAC,uFAAuF,EAAE;gBACxH,MAAM,EAAE,KAAK;aACd,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;YACX,6DAA6D;QAC/D,CAAC;KAAA;;gFAjBU,gBAAgB;gGAAhB,gBAAgB;QCR7B,yEACE;QAAA,wEAA6B;QAAA,uFAA4B;QAAA,4DAAK;QAC9D,gEACA;QAAA,oEAAwD;QAa1D,4DAAM;;QAbc,0DAA+B;QAA/B,8JAA+B;;6FDKtC,gBAAgB;cAN5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,WAAW,EAAE,0BAA0B;gBACvC,SAAS,EAAE,CAAC,0BAA0B,CAAC;gBACvC,aAAa,EAAE,+DAAiB,CAAC,IAAI;aACtC;;;;;;;;;;;;;;AEPD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAEU;AACzD,8EAA8E;AACjC;AACe;AAE5D,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,iFAAe,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KACzC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {\n  Component,\n  OnInit,\n  ViewEncapsulation,\n  ViewChild,\n  ViewContainerRef,\n  ComponentFactoryResolver,\n  AfterViewInit\n} from '@angular/core';\nimport components, { ComponentWithMeta } from './components';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class AppComponent implements OnInit, AfterViewInit {\n  components = [];\n  @ViewChild('content', { read: ViewContainerRef }) content: ViewContainerRef;\n  active: ComponentWithMeta;\n  constructor(private facResolver: ComponentFactoryResolver) { }\n\n  ngOnInit(): void {\n    this.components = components.getData();\n  }\n  ngAfterViewInit() {\n    this.activateCompo(this.components[0]);\n  }\n  getPix(str: string) {\n    return +str.split('px')[0];\n  }\n  prev(p: HTMLElement, $event: MouseEvent) {\n    const target = ($event.target as HTMLElement);\n    const rect = window.getComputedStyle(target);\n    const space = target.offsetWidth + this.getPix(rect.marginInlineStart) + this.getPix(rect.marginInlineEnd);\n    const visibleWidth = p.offsetWidth - (space * 2);\n    const remainingScroll = p.scrollWidth - (p.scrollLeft + visibleWidth);\n    p.scrollBy({\n      behavior: 'smooth',\n      left: -(remainingScroll - visibleWidth > 0 ? visibleWidth : remainingScroll)\n    });\n  }\n  next(p: HTMLElement, $event: MouseEvent) {\n    const target = ($event.target as HTMLElement);\n    const rect = window.getComputedStyle(target);\n    const space = target.offsetWidth + this.getPix(rect.marginInlineStart) + this.getPix(rect.marginInlineEnd);\n    const visibleWidth = p.offsetWidth - (space * 2);\n\n    const remainingScroll = p.scrollWidth - (p.scrollLeft + visibleWidth);\n    p.scrollBy({\n      behavior: 'smooth',\n      left: remainingScroll - visibleWidth > 0 ? visibleWidth : remainingScroll\n    });\n  }\n  activateCompo(c: ComponentWithMeta) {\n    this.content.clear();\n    const factory = this.facResolver.resolveComponentFactory(c.compo);\n    this.content.createComponent(factory);\n    this.active = c;\n  }\n}\n","<nav class=\"c-nav\">\n  <span class=\"c-brand\">Component Builder</span>\n  <div class=\"wrapper\">\n    <div class=\"scrollbar\" #nav>\n      <div class=\"nav prev\" (click)=\"prev(nav, $event)\">&#x02190;</div>\n      <div class=\"content\">\n        <ul>\n          <li role=\"button\" [class.active]=\"active?.name === c.name\" *ngFor=\"let c of components;\" (click)=\"activateCompo(c)\">\n            {{c.name}}\n          </li>\n        </ul>\n      </div>\n\n      <div class=\"nav next\" (click)=\"next(nav, $event)\">&#x02192;</div>\n    </div>\n\n  </div>\n\n</nav>\n\n<main #content class=\"c-content\">\n</main>\n","import { CommonModule } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgModule, Injector, Type, Component, DoBootstrap, ApplicationRef, isDevMode } from '@angular/core';\nimport { createCustomElement } from '@angular/elements';\nimport components from './components';\nimport { AppComponent } from './app.component';\nimport { Test2Component } from './test2/test2.component';\nimport { WelcomeComponent } from './welcome/welcome.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    Test2Component,\n    WelcomeComponent,\n  ],\n  imports: [\n    CommonModule,\n    BrowserModule,\n    HttpClientModule,\n  ],\n  providers: [],\n  entryComponents: [Test2Component]\n})\nexport class AppModule implements DoBootstrap {\n  constructor(private injector: Injector) {\n    components.getData().forEach(c => {\n      this.addCustomComponent(c.name, c.compo);\n    });\n  }\n\n  addCustomComponent<T>(name: string, c: Type<T>) {\n    const el = createCustomElement(c, { injector: this.injector }) as any;\n    customElements.define(name, el);\n  }\n  // necessary\n  ngDoBootstrap(appRef: ApplicationRef) {\n    if (isDevMode()) {\n      appRef.bootstrap(AppComponent);\n    }\n  }\n}\n","import { Type } from '@angular/core';\nimport { Test2Component } from './test2/test2.component';\nimport { getComponentTag } from './utils';\nimport { WelcomeComponent } from './welcome/welcome.component';\n\nconst components: EjectedComponents = [\n  ['welcome-page', WelcomeComponent],\n  Test2Component\n];\n\nObject.defineProperty(components, 'getData', {\n  enumerable: true,\n  value() {\n    const result = [];\n    for (const c of this) {\n      let compo;\n      let name;\n      if (c instanceof Array) {\n        name = c[0];\n        compo = c[1];\n      } else {\n        name = getComponentTag(c);\n        compo = c;\n      }\n      result.push({ name, compo });\n    }\n    return result;\n  }\n});\nexport interface ComponentWithMeta { name: string; compo: Type<any>; }\n\nexport type EjectedComponents = Array<[string, Type<any>] | Type<any>> & {\n  getData?: () => ComponentWithMeta[];\n};\nexport default components;\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'custom-test2',\n  templateUrl: './test2.component.html',\n  styleUrls: ['./test2.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class Test2Component implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h5 class=\"text-center mt-4 font-weight-light\">Simple Testing Sign In page</h5>\n<hr>\n<div class=\"text-center\">\n  <form class=\"form-signin\">\n    <img class=\"mb-4\"\n      src=\"https://raw.githubusercontent.com/twbs/bootstrap/v4.5.0/site/docs/4.5/assets/brand/bootstrap-solid.svg\"\n      alt=\"\" width=\"72\" height=\"72\">\n    <h1 class=\"h3 mb-3 font-weight-normal\">Please sign in</h1>\n    <label for=\"inputEmail\" class=\"sr-only\">Email address</label>\n    <input type=\"email\" id=\"inputEmail\" class=\"form-control mb-3\" placeholder=\"Email address\" required=\"\" autofocus=\"\">\n    <label for=\"inputPassword\" class=\"sr-only\">Password</label>\n    <input type=\"password\" id=\"inputPassword\" class=\"form-control\" placeholder=\"Password\" required=\"\">\n    <div class=\"checkbox mb-3\">\n      <label>\n        <input type=\"checkbox\" value=\"remember-me\"> Remember me\n      </label>\n    </div>\n    <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Sign in</button>\n    <p class=\"mt-5 mb-3 text-muted\">© 2017-2020</p>\n  </form>\n\n\n</div>\n","import { Type, Component, isDevMode } from '@angular/core';\n\nexport function getComponentTag(c: Type<any>): string {\n  try {\n    if (isDevMode()) {\n      const componentDeco = (c as any).decorators.find(d => d.type.prototype.ngMetadataName.toLowerCase() === 'component');\n      return componentDeco.args.reduce((a, arg) => ({ ...a, ...arg }), {}).selector;\n    } else {\n      return (c as any).ɵcmp.selectors[0][0];\n    }\n  } catch (e) {\n    throw new Error('Unable to get Component selector for \"' + c + '\"');\n  }\n}\n","import { Component, OnInit, ViewEncapsulation, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\nimport * as markdown from 'markdown-it';\n@Component({\n  selector: 'pop-welcome',\n  templateUrl: './welcome.component.html',\n  styleUrls: ['./welcome.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class WelcomeComponent implements OnInit, AfterViewInit {\n  readMe: string | ArrayBuffer;\n  // headings = new Map<string, string>();\n  md = new markdown();\n  constructor() { }\n\n  ngOnInit(): void {\n    this.getReadMe();\n  }\n  ngAfterViewInit() {\n  }\n\n  async getReadMe() {\n    this.readMe = await (await fetch('https://raw.githubusercontent.com/parasharrajat/ng-custom-components/master/README.md', {\n      method: 'get',\n    })).text();\n    // const headingsReg = /^#+(?<heading>.+)(?<content>[^#]*)/m;\n  }\n\n}\n","<div class=\"container\">\n  <h5 class=\"text-center mt-4\">Welcome To Component Builder</h5>\n  <hr>\n  <div class=\"page\" [innerHtml]=\"md.render(readMe)\"></div>\n  <!-- <section *ngFor=\"let section of headings.entries();\">\n    <h6>{{section[0]}}</h6>\n    <div class=\"body\" >\n      <div class=\"row\">\n        <div class=\"col-6\">\n          <div class=\"card\">\n            <div class=\"card-body\" [innerHtml]=\"md.render(section[1])\"></div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section> -->\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\n\nimport { environment } from './environments/environment';\n// import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { AppModule } from './app/app.module';\nimport { platformBrowser } from '@angular/platform-browser';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowser().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}