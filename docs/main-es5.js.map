{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components.ts","webpack:///src/app/test2/test2.component.ts","webpack:///src/app/test2/test2.component.html","webpack:///src/app/utils.ts","webpack:///src/app/welcome/welcome.component.ts","webpack:///src/app/welcome/welcome.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","facResolver","components","getData","activateCompo","str","split","p","$event","target","rect","window","getComputedStyle","space","offsetWidth","getPix","marginInlineStart","marginInlineEnd","visibleWidth","remainingScroll","scrollWidth","scrollLeft","scrollBy","behavior","left","c","content","clear","factory","resolveComponentFactory","compo","createComponent","active","prev","next","selector","templateUrl","styleUrls","encapsulation","None","read","AppModule","injector","forEach","addCustomComponent","name","el","customElements","define","appRef","bootstrap","declarations","imports","providers","entryComponents","Object","defineProperty","enumerable","value","result","Array","push","Test2Component","getComponentTag","componentDeco","decorators","find","d","type","prototype","ngMetadataName","toLowerCase","args","reduce","a","arg","Éµcmp","selectors","WelcomeComponent","md","getReadMe","fetch","method","text","readMe","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {\n  Component,\n  OnInit,\n  ViewEncapsulation,\n  ViewChild,\n  ViewContainerRef,\n  ComponentFactoryResolver,\n  AfterViewInit\n} from '@angular/core';\nimport components, { ComponentWithMeta } from './components';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class AppComponent implements OnInit, AfterViewInit {\n  components = [];\n  @ViewChild('content', { read: ViewContainerRef }) content: ViewContainerRef;\n  active: ComponentWithMeta;\n  constructor(private facResolver: ComponentFactoryResolver) { }\n\n  ngOnInit(): void {\n    this.components = components.getData();\n  }\n  ngAfterViewInit() {\n    this.activateCompo(this.components[0]);\n  }\n  getPix(str: string) {\n    return +str.split('px')[0];\n  }\n  prev(p: HTMLElement, $event: MouseEvent) {\n    const target = ($event.target as HTMLElement);\n    const rect = window.getComputedStyle(target);\n    const space = target.offsetWidth + this.getPix(rect.marginInlineStart) + this.getPix(rect.marginInlineEnd);\n    const visibleWidth = p.offsetWidth - (space * 2);\n    const remainingScroll = p.scrollWidth - (p.scrollLeft + visibleWidth);\n    p.scrollBy({\n      behavior: 'smooth',\n      left: -(remainingScroll - visibleWidth > 0 ? visibleWidth : remainingScroll)\n    });\n  }\n  next(p: HTMLElement, $event: MouseEvent) {\n    const target = ($event.target as HTMLElement);\n    const rect = window.getComputedStyle(target);\n    const space = target.offsetWidth + this.getPix(rect.marginInlineStart) + this.getPix(rect.marginInlineEnd);\n    const visibleWidth = p.offsetWidth - (space * 2);\n\n    const remainingScroll = p.scrollWidth - (p.scrollLeft + visibleWidth);\n    p.scrollBy({\n      behavior: 'smooth',\n      left: remainingScroll - visibleWidth > 0 ? visibleWidth : remainingScroll\n    });\n  }\n  activateCompo(c: ComponentWithMeta) {\n    this.content.clear();\n    const factory = this.facResolver.resolveComponentFactory(c.compo);\n    this.content.createComponent(factory);\n    this.active = c;\n  }\n}\n","<nav class=\"c-nav\">\n  <span class=\"c-brand\">Component Builder</span>\n  <div class=\"wrapper\">\n    <div class=\"scrollbar\" #nav>\n      <div class=\"nav prev\" (click)=\"prev(nav, $event)\">&#x02190;</div>\n      <div class=\"content\">\n        <ul>\n          <li role=\"button\" [class.active]=\"active?.name === c.name\" *ngFor=\"let c of components;\" (click)=\"activateCompo(c)\">\n            {{c.name}}\n          </li>\n        </ul>\n      </div>\n\n      <div class=\"nav next\" (click)=\"next(nav, $event)\">&#x02192;</div>\n    </div>\n\n  </div>\n\n</nav>\n\n<main #content class=\"c-content\">\n</main>\n","import { CommonModule } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgModule, Injector, Type, Component, DoBootstrap, ApplicationRef, isDevMode } from '@angular/core';\nimport { createCustomElement } from '@angular/elements';\nimport components from './components';\nimport { AppComponent } from './app.component';\nimport { Test2Component } from './test2/test2.component';\nimport { WelcomeComponent } from './welcome/welcome.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    Test2Component,\n    WelcomeComponent,\n  ],\n  imports: [\n    CommonModule,\n    BrowserModule,\n    HttpClientModule,\n  ],\n  providers: [],\n  entryComponents: [Test2Component]\n})\nexport class AppModule implements DoBootstrap {\n  constructor(private injector: Injector) {\n    components.getData().forEach(c => {\n      this.addCustomComponent(c.name, c.compo);\n    });\n  }\n\n  addCustomComponent<T>(name: string, c: Type<T>) {\n    const el = createCustomElement(c, { injector: this.injector }) as any;\n    customElements.define(name, el);\n  }\n  // necessary\n  ngDoBootstrap(appRef: ApplicationRef) {\n    if (isDevMode()) {\n      appRef.bootstrap(AppComponent);\n    }\n  }\n}\n","import { Type } from '@angular/core';\nimport { Test2Component } from './test2/test2.component';\nimport { getComponentTag } from './utils';\nimport { WelcomeComponent } from './welcome/welcome.component';\n\nconst components: EjectedComponents = [\n  ['welcome-page', WelcomeComponent],\n  Test2Component\n];\n\nObject.defineProperty(components, 'getData', {\n  enumerable: true,\n  value() {\n    const result = [];\n    for (const c of this) {\n      let compo;\n      let name;\n      if (c instanceof Array) {\n        name = c[0];\n        compo = c[1];\n      } else {\n        name = getComponentTag(c);\n        compo = c;\n      }\n      result.push({ name, compo });\n    }\n    return result;\n  }\n});\nexport interface ComponentWithMeta { name: string; compo: Type<any>; }\n\nexport type EjectedComponents = Array<[string, Type<any>] | Type<any>> & {\n  getData?: () => ComponentWithMeta[];\n};\nexport default components;\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'custom-test2',\n  templateUrl: './test2.component.html',\n  styleUrls: ['./test2.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class Test2Component implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h5 class=\"text-center mt-4 font-weight-light\">Simple Testing Sign In page</h5>\n<hr>\n<div class=\"text-center\">\n  <form class=\"form-signin\">\n    <img class=\"mb-4\"\n      src=\"https://raw.githubusercontent.com/twbs/bootstrap/v4.5.0/site/docs/4.5/assets/brand/bootstrap-solid.svg\"\n      alt=\"\" width=\"72\" height=\"72\">\n    <h1 class=\"h3 mb-3 font-weight-normal\">Please sign in</h1>\n    <label for=\"inputEmail\" class=\"sr-only\">Email address</label>\n    <input type=\"email\" id=\"inputEmail\" class=\"form-control mb-3\" placeholder=\"Email address\" required=\"\" autofocus=\"\">\n    <label for=\"inputPassword\" class=\"sr-only\">Password</label>\n    <input type=\"password\" id=\"inputPassword\" class=\"form-control\" placeholder=\"Password\" required=\"\">\n    <div class=\"checkbox mb-3\">\n      <label>\n        <input type=\"checkbox\" value=\"remember-me\"> Remember me\n      </label>\n    </div>\n    <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Sign in</button>\n    <p class=\"mt-5 mb-3 text-muted\">Â© 2017-2020</p>\n  </form>\n\n\n</div>\n","import { Type, Component, isDevMode } from '@angular/core';\n\nexport function getComponentTag(c: Type<any>): string {\n  try {\n    if (isDevMode()) {\n      const componentDeco = (c as any).decorators.find(d => d.type.prototype.ngMetadataName.toLowerCase() === 'component');\n      return componentDeco.args.reduce((a, arg) => ({ ...a, ...arg }), {}).selector;\n    } else {\n      return (c as any).Éµcmp.selectors[0][0];\n    }\n  } catch (e) {\n    throw new Error('Unable to get Component selector for \"' + c + '\"');\n  }\n}\n","import { Component, OnInit, ViewEncapsulation, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\nimport * as markdown from 'markdown-it';\n@Component({\n  selector: 'pop-welcome',\n  templateUrl: './welcome.component.html',\n  styleUrls: ['./welcome.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class WelcomeComponent implements OnInit, AfterViewInit {\n  readMe: string | ArrayBuffer;\n  // headings = new Map<string, string>();\n  md = new markdown();\n  constructor() { }\n\n  ngOnInit(): void {\n    this.getReadMe();\n  }\n  ngAfterViewInit() {\n  }\n\n  async getReadMe() {\n    this.readMe = await (await fetch('https://raw.githubusercontent.com/parasharrajat/ng-custom-components/master/README.md', {\n      method: 'get',\n    })).text();\n    // const headingsReg = /^#+(?<heading>.+)(?<content>[^#]*)/m;\n  }\n\n}\n","<div class=\"container\">\n  <h5 class=\"text-center mt-4\">Welcome To Component Builder</h5>\n  <hr>\n  <div class=\"page\" [innerHtml]=\"md.render(readMe)\"></div>\n  <!-- <section *ngFor=\"let section of headings.entries();\">\n    <h6>{{section[0]}}</h6>\n    <div class=\"body\" >\n      <div class=\"row\">\n        <div class=\"col-6\">\n          <div class=\"card\">\n            <div class=\"card-body\" [innerHtml]=\"md.render(section[1])\"></div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section> -->\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\n\nimport { environment } from './environments/environment';\n// import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { AppModule } from './app/app.module';\nimport { platformBrowser } from '@angular/platform-browser';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowser().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}